// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// interpolate
Eigen::VectorXd interpolate(Eigen::VectorXd x, Eigen::VectorXd values, Eigen::VectorXd grid);
RcppExport SEXP _kde1d_interpolate(SEXP xSEXP, SEXP valuesSEXP, SEXP gridSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type x(xSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type values(valuesSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type grid(gridSEXP);
    rcpp_result_gen = Rcpp::wrap(interpolate(x, values, grid));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_kde1d_interpolate", (DL_FUNC) &_kde1d_interpolate, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_kde1d(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
